-- Cria o banco de dados se não existir
CREATE DATABASE IF NOT EXISTS acao_voluntarioado CHARACTER SET utf8mb4 COLLATE
utf8mb4_unicode_ci;
-- Usa o banco de dados
USE acao_voluntarioado;
-- Cria a tabela de usuários
CREATE TABLE IF NOT EXISTS users (
id INT AUTO_INCREMENT PRIMARY KEY,
email VARCHAR(255) NOT NULL UNIQUE,
password VARCHAR(255) NOT NULL,
role VARCHAR(50) NOT NULL DEFAULT 'user',
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insere dois tipos de usuários
INSERT INTO users (email, password, role) VALUES
('usuario@ifrs.edu.br',
'$2b$10$382cEJJYi5YxSBNvWmufHeoPHX3dqIB9NP2R2XWzt/w.DnC0gmCr2', 'user'),
('admin@ifrs.edu.br',
'$2b$10$/JLXJ62EBlk1bNq0xmpvMuTLDJb6AWmZUs74lgEJb4Z.J9.3kFJM.', 'admin');
-- crir tabela de eventos
CREATE TABLE IF NOT EXISTS eventos (
id INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(255) NOT NULL UNIQUE,
descricao VARCHAR(255) NOT NULL,
data DATE NOT NULL,
hora TIME NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS inscricoes_eventos (
id_usuario INT NOT NULL,
id_evento INT NOT NULL,
data_inscricao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
-- Define a chave estrangeira que referencia a tabela 'users'
FOREIGN KEY (id_usuario) REFERENCES users(id)
ON DELETE CASCADE -- Se um usuário for deletado, suas inscrições também são
ON UPDATE CASCADE, -- Se o ID de um usuário for atualizado, atualiza aqui também
-- Define a chave estrangeira que referencia a tabela 'eventos'
FOREIGN KEY (id_evento) REFERENCES eventos(id)
ON DELETE CASCADE -- Se um evento for deletado, suas inscrições também são
ON UPDATE CASCADE,
-- Define uma chave primária composta para garantir que um usuário
-- não possa se inscrever no mesmo evento mais de uma vez.
PRIMARY KEY (id_usuario, id_evento)
);